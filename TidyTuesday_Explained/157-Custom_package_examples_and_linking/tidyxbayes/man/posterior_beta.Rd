% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beta_dists.R
\name{posterior_beta_mu}
\alias{posterior_beta_mu}
\alias{posterior_beta_sd}
\title{Calculate Posterior mu based on Beta distribution}
\usage{
posterior_beta_mu(prior_alpha, prior_beta, n, success)

posterior_beta_sd(prior_alpha, prior_beta, n, success)
}
\arguments{
\item{prior_alpha}{beta distribution alpha parameter from population}

\item{prior_beta}{beta distribution beta parameter from population}

\item{n}{numeric value representing number of observations}

\item{success}{numeric value representing the number of success (positive) observations}
}
\description{
Calculate posterior mu and sd given priors, observations, and n success to
calculate
}
\examples{

## Set up

library(tidyverse)

pop_avg <- lahman_batting_2010 \%>\%
  filter(AB >= quantile(AB, probs = 0.75)) \%>\%
  pull(batting_avg) \%>\%
  mean()
pop_var <- lahman_batting_2010 \%>\%
  filter(AB >= quantile(AB, probs = 0.75)) \%>\%
  pull(batting_avg) \%>\%
  var()

pop_avg
pop_var
sqrt(pop_var)

batting_avg_params <- get_beta_parameters(
  population_avg = pop_avg,
  population_var = pop_var
)

ba_alpha_prior <- batting_avg_params$alpha
ba_beta_prior <- batting_avg_params$beta

## Using the functions

set.seed(559)

small_batting <- lahman_batting_2010 \%>\%
 sample_n(size = 10)

small_batting \%>\%
   mutate(
      posterior_batting_avg = posterior_beta_mu(ba_alpha_prior, ba_beta_prior, n = AB, success = H),
      posterior_batting_sd = posterior_beta_sd(ba_alpha_prior, ba_beta_prior, n = AB, success = H)
      )


}
