[{"name":"app.R","content":"library(shiny)\r\nlibrary(dplyr)\r\nlibrary(tibble)\r\nlibrary(ggplot2)\r\n\r\nd <- mtcars %>%\r\n  rownames_to_column(var = \"car_types\") %>%\r\n  mutate(cyl = as.factor(cyl),\r\n         am = as.factor(am)) %>%\r\n  select(car_types, mpg, cyl, am, disp, wt)\r\n\r\nd %>%\r\n  head()\r\n\r\n### UI\r\nui <- fluidPage(\r\n  \r\n  title = \"Cars!\",\r\n  \r\n  sidebarPanel(\r\n    \r\n    selectInput(inputId = \"cyl\",\r\n                label = \"Cylinders\",\r\n                choices = sort(unique(d$cyl)),\r\n                selected = NULL,\r\n                multiple = FALSE),\r\n    \r\n    selectInput(inputId = \"am\",\r\n                label = \"Transmission\",\r\n                choices = sort(unique(d$am)),\r\n                selected = NULL,\r\n                multiple = FALSE)\r\n    \r\n    \r\n  ),\r\n  \r\n  mainPanel(\r\n    plotOutput(outputId = 'xy_plt'),\r\n    plotOutput(outputId = \"hist_plt\"),\r\n    tableOutput(outputId = \"tbl\")\r\n  )\r\n)\r\n\r\n\r\n### Server\r\nserver <- function(input, output, session){\r\n  \r\n  ## update based on URL parameters\r\n  observe({\r\n\r\n    query <- parseQueryString(session$clientData$url_search)\r\n\r\n    if(!is.null(query[['cyl']])){\r\n      updateSelectInput(session, \"cyl\", selected = query[['cyl']])\r\n    }\r\n\r\n    if(!is.null(query[['am']])){\r\n      updateSelectInput(session, \"am\", selected = query[[\"am\"]])\r\n    }\r\n  })\r\n  \r\n  ## get data\r\n  dat <- reactive({\r\n    \r\n    d %>%\r\n      filter(cyl == input$cyl,\r\n             am == input$am)\r\n    \r\n  })\r\n  \r\n  ## xy plot\r\n  output$xy_plt <- renderPlot({\r\n    \r\n    dat() %>%\r\n      ggplot(aes(x = disp, y = mpg)) +\r\n      geom_jitter(size = 5,\r\n                  color = \"green\") +\r\n      geom_smooth(method = \"lm\",\r\n                  se = FALSE,\r\n                  color = \"black\",\r\n                  size = 1.2) +\r\n      theme_light()\r\n    \r\n  })\r\n  \r\n  ## hist plot\r\n  output$hist_plt <- renderPlot({\r\n    \r\n    dat() %>%\r\n      ggplot(aes(x = \"1\", y = wt)) +\r\n      geom_boxplot(color = \"black\",\r\n                   fill = \"light grey\") +\r\n      theme_light()\r\n    \r\n  })\r\n  \r\n  ## table of car types\r\n  output$tbl <- renderTable({\r\n    \r\n    dat() %>% select(car_types)\r\n    \r\n  })\r\n}\r\n\r\n\r\n# shiny_query <- \r\nshiny::shinyApp(ui = ui, server = server)\r\n\r\n# ## run on port 8888 of my local computer (127.0.0.1 is the ipv4 address of your local computer)\r\n# runApp(shiny_query, port = 8888, host = \"127.0.0.1\", launch.browser = TRUE)\r\n\r\n\r\n# http://127.0.0.1:8888/?cyl=4\r\n# http://127.0.0.1:8888/?cyl=6\r\n\r\n# http://127.0.0.1:8888/?am=0\r\n# http://127.0.0.1:8888/?am=1&cyl=8\r\n\r\n\r\n\r\n## invalid entry\r\n# http://127.0.0.1:8888/?cyl=24","type":"text"},{"name":"DESCRIPTION","content":"Title: mtcars shiny!\r\nAuthor: TidyX\r\nAuthorUrl: https://github.com/thebioengineer/TidyX\r\nLicense: MIT\r\nDisplayMode: Showcase\r\n","type":"text"}]
